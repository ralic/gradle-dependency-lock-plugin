/*
 * Copyright 2014-2015 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


plugins {
    id 'com.gradle.plugin-publish' version '0.9.4'
    id 'nebula.plugin-plugin' version '4.21.0'
    id 'org.ysb33r.gradletest' version '0.5.4'
}

description 'Gradle plugin to allow locking of dynamic dependency versions'

group = 'com.netflix.nebula'

contacts {
    'rob.spieldenner@gmail.com' {
        moniker 'Rob Spieldenner'
        github 'rspieldenner'
    }
    'nadavcoh@gmail.com' {
        moniker 'Nadav Cohen'
        github 'nadavc'
    }
}

dependencies {
    compile 'com.netflix.nebula:gradle-scm-plugin:2.2.0'
    testCompile 'com.netflix.nebula:gradle-git-scm-plugin:2.2.0'
    testCompile 'org.ajoberstar:grgit:1.3.0'
}

pluginBundle {
    website = 'https://github.com/nebula-plugins/gradle-dependency-lock-plugin'
    vcsUrl = 'https://github.com/nebula-plugins/gradle-dependency-lock-plugin.git'
    description = 'Plugin to lock dynamic dependencies'

    plugins {
        dependencyLock {
            id = 'nebula.dependency-lock'
            displayName = 'Nebula Dependency Lock plugin'
            description = 'Plugin to lock dynamic dependencies'
            tags = ['nebula', 'dependencies', 'lock']
        }
    }

    mavenCoordinates {
        groupId = 'com.netflix.nebula'
        artifactId = 'gradle-dependency-lock-plugin'
    }
}

gradleTest {
    versions '2.2.1', '2.3', '2.4', '2.5', '2.6', '2.7', '2.8', '2.9', '2.10'
}

gradleTest.dependsOn(jar)
gradleTest.doFirst {
    project.version = project.version.toString()
}

